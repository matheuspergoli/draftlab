generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  relationMode = "prisma"
  url          = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum UserRole {
  USER
  ADMIN
  SUPERADMIN
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?   @db.Text
  imageId       String?

  accounts Account[]
  sessions Session[]

  role UserRole @default(USER)

  sites Site[]
  posts Post[]
}

model Site {
  id          String   @id @default(cuid())
  name        String?  @db.VarChar(32)
  description String?  @db.VarChar(140)
  font        String?  @default("font-inter")
  message404  String?  @default("Ops, parece que você se aventurou em território desconhecido.") @db.VarChar(140)
  logo        String?  @default("https://public.blob.vercel-storage.com/eEZHAoPTOBSYGBE3/JRajRyC-PhBHEinQkupt02jqfKacBVHLWJq7Iy.png")
  logoId      String?
  image       String?  @default("https://placehold.co/500x500/png?text=Thumbnail+Placeholder&font=roboto")
  imageId     String?
  subdomain   String?  @unique @db.VarChar(32)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String?

  posts Post[]

  @@index([userId])
}

model Post {
  id          String   @id @default(cuid())
  title       String?  @db.VarChar(128)
  description String?  @db.VarChar(255)
  content     Json?
  slug        String?  @unique @default(cuid())
  image       String?  @default("https://placehold.co/500x500/png?text=Post+Image+Placeholder&font=roboto")
  imageId     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String?

  site   Site?   @relation(fields: [siteId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  siteId String?

  @@index([userId])
  @@index([siteId])
}
